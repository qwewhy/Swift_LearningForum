//
// QuestionBank.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct QuestionBank: Codable, JSONEncodable, Hashable {

    public var createTime: Date?
    public var description: String?
    public var editTime: Date?
    public var id: Int64?
    public var isDelete: Int?
    public var picture: String?
    public var priority: Int?
    public var title: String?
    public var updateTime: Date?
    public var userId: Int64?

    public init(createTime: Date? = nil, description: String? = nil, editTime: Date? = nil, id: Int64? = nil, isDelete: Int? = nil, picture: String? = nil, priority: Int? = nil, title: String? = nil, updateTime: Date? = nil, userId: Int64? = nil) {
        self.createTime = createTime
        self.description = description
        self.editTime = editTime
        self.id = id
        self.isDelete = isDelete
        self.picture = picture
        self.priority = priority
        self.title = title
        self.updateTime = updateTime
        self.userId = userId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case createTime
        case description
        case editTime
        case id
        case isDelete
        case picture
        case priority
        case title
        case updateTime
        case userId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(createTime, forKey: .createTime)
        try container.encodeIfPresent(description, forKey: .description)
        try container.encodeIfPresent(editTime, forKey: .editTime)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(isDelete, forKey: .isDelete)
        try container.encodeIfPresent(picture, forKey: .picture)
        try container.encodeIfPresent(priority, forKey: .priority)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(updateTime, forKey: .updateTime)
        try container.encodeIfPresent(userId, forKey: .userId)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension QuestionBank: Identifiable {}
