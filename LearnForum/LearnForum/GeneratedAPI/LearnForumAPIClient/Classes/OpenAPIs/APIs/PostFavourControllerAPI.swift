//
// PostFavourControllerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PostFavourControllerAPI {

    /**
     doPostFavour
     
     - parameter postFavourAddRequest: (body) postFavourAddRequest 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func doPostFavourUsingPOST(postFavourAddRequest: PostFavourAddRequest, apiResponseQueue: DispatchQueue = LearnForumAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BaseResponseint?, _ error: Error?) -> Void)) -> RequestTask {
        return doPostFavourUsingPOSTWithRequestBuilder(postFavourAddRequest: postFavourAddRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     doPostFavour
     - POST /api/post_favour/
     - parameter postFavourAddRequest: (body) postFavourAddRequest 
     - returns: RequestBuilder<BaseResponseint?> 
     */
    open class func doPostFavourUsingPOSTWithRequestBuilder(postFavourAddRequest: PostFavourAddRequest) -> RequestBuilder<BaseResponseint?> {
        let localVariablePath = "/api/post_favour/"
        let localVariableURLString = LearnForumAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postFavourAddRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseResponseint?>.Type = LearnForumAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     listFavourPostByPage
     
     - parameter postFavourQueryRequest: (body) postFavourQueryRequest 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listFavourPostByPageUsingPOST(postFavourQueryRequest: PostFavourQueryRequest, apiResponseQueue: DispatchQueue = LearnForumAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BaseResponsePagePostVO?, _ error: Error?) -> Void)) -> RequestTask {
        return listFavourPostByPageUsingPOSTWithRequestBuilder(postFavourQueryRequest: postFavourQueryRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     listFavourPostByPage
     - POST /api/post_favour/list/page
     - parameter postFavourQueryRequest: (body) postFavourQueryRequest 
     - returns: RequestBuilder<BaseResponsePagePostVO?> 
     */
    open class func listFavourPostByPageUsingPOSTWithRequestBuilder(postFavourQueryRequest: PostFavourQueryRequest) -> RequestBuilder<BaseResponsePagePostVO?> {
        let localVariablePath = "/api/post_favour/list/page"
        let localVariableURLString = LearnForumAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postFavourQueryRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseResponsePagePostVO?>.Type = LearnForumAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**
     listMyFavourPostByPage
     
     - parameter postQueryRequest: (body) postQueryRequest 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func listMyFavourPostByPageUsingPOST(postQueryRequest: PostQueryRequest, apiResponseQueue: DispatchQueue = LearnForumAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: BaseResponsePagePostVO?, _ error: Error?) -> Void)) -> RequestTask {
        return listMyFavourPostByPageUsingPOSTWithRequestBuilder(postQueryRequest: postQueryRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     listMyFavourPostByPage
     - POST /api/post_favour/my/list/page
     - parameter postQueryRequest: (body) postQueryRequest 
     - returns: RequestBuilder<BaseResponsePagePostVO?> 
     */
    open class func listMyFavourPostByPageUsingPOSTWithRequestBuilder(postQueryRequest: PostQueryRequest) -> RequestBuilder<BaseResponsePagePostVO?> {
        let localVariablePath = "/api/post_favour/my/list/page"
        let localVariableURLString = LearnForumAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: postQueryRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<BaseResponsePagePostVO?>.Type = LearnForumAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
